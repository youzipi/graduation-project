# coding=utf-8
    import timeit

    if __name__ == '__main__':
        _r = 5
        _n = 1000000
        s = str

        print(timeit.repeat("s(112)", setup="from __main__ import s", repeat=_r, number=_n))
        print(timeit.repeat("str(112)", repeat=_r, number=_n))

    # 1.test s,then str
    # [0.22136712074279785, 0.18772411346435547, 0.16153311729431152, 0.15581107139587402, 0.1546940803527832] s
    # [0.19046807289123535, 0.1990509033203125, 0.19870710372924805, 0.18471217155456543, 0.1823439598083496] str

    # 2. test str,then s
    # [0.2088918685913086, 0.18737316131591797, 0.1878829002380371, 0.20372295379638672, 0.20828890800476074] str
    # [0.15288996696472168, 0.158311128616333, 0.16825199127197266, 0.15237903594970703, 0.152756929397583] s


# 直接调用原方法 时间比较稳定
# 调用本地方法 时间后面比较低,开始稍高,不知道为什么
